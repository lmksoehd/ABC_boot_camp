{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1wpSj7Fo85C8JNdwoPpPbifwsSD-NhH82","timestamp":1690715203089}],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## feature 선택\n","\n","*   feature 선택 3개 이상\n","*   모델 선택 (LinearRegression, Ridge, Lasso) 사용\n","*   모델의 정확도가 가장 노은 모델 선택 (alpha 조장 가능)\n","*   훈련셋과 테스트셋 결과 출력(차트도 가능)\n","*   훈련셋(70 %), 테스트셋(30%), random_state = 7 고정\n"],"metadata":{"id":"QXJQfyI5AUI8"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7yRiLm_7XJp1","executionInfo":{"status":"ok","timestamp":1690623631170,"user_tz":-540,"elapsed":18480,"user":{"displayName":"심민기","userId":"11907351072291229928"}},"outputId":"750b346f-0a8f-4d19-94f8-3fbd7c07d5fe"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting mglearn\n","  Downloading mglearn-0.2.0-py2.py3-none-any.whl (581 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m581.4/581.4 kB\u001b[0m \u001b[31m5.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from mglearn) (1.22.4)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from mglearn) (3.7.1)\n","Requirement already satisfied: scikit-learn in /usr/local/lib/python3.10/dist-packages (from mglearn) (1.2.2)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (from mglearn) (1.5.3)\n","Requirement already satisfied: pillow in /usr/local/lib/python3.10/dist-packages (from mglearn) (9.4.0)\n","Requirement already satisfied: cycler in /usr/local/lib/python3.10/dist-packages (from mglearn) (0.11.0)\n","Requirement already satisfied: imageio in /usr/local/lib/python3.10/dist-packages (from mglearn) (2.25.1)\n","Requirement already satisfied: joblib in /usr/local/lib/python3.10/dist-packages (from mglearn) (1.3.1)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->mglearn) (1.1.0)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->mglearn) (4.41.1)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->mglearn) (1.4.4)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->mglearn) (23.1)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->mglearn) (3.1.0)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib->mglearn) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas->mglearn) (2022.7.1)\n","Requirement already satisfied: scipy>=1.3.2 in /usr/local/lib/python3.10/dist-packages (from scikit-learn->mglearn) (1.10.1)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn->mglearn) (3.2.0)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.7->matplotlib->mglearn) (1.16.0)\n","Installing collected packages: mglearn\n","Successfully installed mglearn-0.2.0\n","Collecting koreanize-matplotlib\n","  Downloading koreanize_matplotlib-0.1.1-py3-none-any.whl (7.9 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m7.9/7.9 MB\u001b[0m \u001b[31m10.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from koreanize-matplotlib) (3.7.1)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->koreanize-matplotlib) (1.1.0)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib->koreanize-matplotlib) (0.11.0)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->koreanize-matplotlib) (4.41.1)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->koreanize-matplotlib) (1.4.4)\n","Requirement already satisfied: numpy>=1.20 in /usr/local/lib/python3.10/dist-packages (from matplotlib->koreanize-matplotlib) (1.22.4)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->koreanize-matplotlib) (23.1)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->koreanize-matplotlib) (9.4.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->koreanize-matplotlib) (3.1.0)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib->koreanize-matplotlib) (2.8.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.7->matplotlib->koreanize-matplotlib) (1.16.0)\n","Installing collected packages: koreanize-matplotlib\n","Successfully installed koreanize-matplotlib-0.1.1\n"]}],"source":["!pip install mglearn\n","!pip install koreanize-matplotlib"]},{"cell_type":"markdown","source":["# 선형 회귀 모델을 이용한 자동차 연비(MPG) 예측"],"metadata":{"id":"5dbVoigpXY5z"}},{"cell_type":"markdown","source":["## 기본 라이브러리 임포트"],"metadata":{"id":"lbW3RdiSXd0g"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import koreanize_matplotlib"],"metadata":{"id":"kuWhcnImXRI1"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 데이터 준비하기"],"metadata":{"id":"wH7OMocmXrqT"}},{"cell_type":"code","source":["df = pd.read_csv(\"/content/auto-mpg.csv\", header = None)\n","df\n","\n","df.columns = ['mpg','cylinders','displacement','horsepower','weight',\n","              'acceleration','model year','origin','name']\n","\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":730},"id":"OBb4vNpWXrDi","executionInfo":{"status":"ok","timestamp":1690623670738,"user_tz":-540,"elapsed":507,"user":{"displayName":"심민기","userId":"11907351072291229928"}},"outputId":"5c59c798-3d2c-4727-97e6-ffe49a967cce"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      mpg  cylinders  displacement horsepower  weight  acceleration  \\\n","0    18.0          8         307.0      130.0  3504.0          12.0   \n","1    15.0          8         350.0      165.0  3693.0          11.5   \n","2    18.0          8         318.0      150.0  3436.0          11.0   \n","3    16.0          8         304.0      150.0  3433.0          12.0   \n","4    17.0          8         302.0      140.0  3449.0          10.5   \n","..    ...        ...           ...        ...     ...           ...   \n","393  27.0          4         140.0      86.00  2790.0          15.6   \n","394  44.0          4          97.0      52.00  2130.0          24.6   \n","395  32.0          4         135.0      84.00  2295.0          11.6   \n","396  28.0          4         120.0      79.00  2625.0          18.6   \n","397  31.0          4         119.0      82.00  2720.0          19.4   \n","\n","     model year  origin                       name  \n","0            70       1  chevrolet chevelle malibu  \n","1            70       1          buick skylark 320  \n","2            70       1         plymouth satellite  \n","3            70       1              amc rebel sst  \n","4            70       1                ford torino  \n","..          ...     ...                        ...  \n","393          82       1            ford mustang gl  \n","394          82       2                  vw pickup  \n","395          82       1              dodge rampage  \n","396          82       1                ford ranger  \n","397          82       1                 chevy s-10  \n","\n","[398 rows x 9 columns]"],"text/html":["\n","\n","  <div id=\"df-8cd6e851-3854-4c7b-80dd-393911326ca7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mpg</th>\n","      <th>cylinders</th>\n","      <th>displacement</th>\n","      <th>horsepower</th>\n","      <th>weight</th>\n","      <th>acceleration</th>\n","      <th>model year</th>\n","      <th>origin</th>\n","      <th>name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>18.0</td>\n","      <td>8</td>\n","      <td>307.0</td>\n","      <td>130.0</td>\n","      <td>3504.0</td>\n","      <td>12.0</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>chevrolet chevelle malibu</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>15.0</td>\n","      <td>8</td>\n","      <td>350.0</td>\n","      <td>165.0</td>\n","      <td>3693.0</td>\n","      <td>11.5</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>buick skylark 320</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>18.0</td>\n","      <td>8</td>\n","      <td>318.0</td>\n","      <td>150.0</td>\n","      <td>3436.0</td>\n","      <td>11.0</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>plymouth satellite</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>16.0</td>\n","      <td>8</td>\n","      <td>304.0</td>\n","      <td>150.0</td>\n","      <td>3433.0</td>\n","      <td>12.0</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>amc rebel sst</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>17.0</td>\n","      <td>8</td>\n","      <td>302.0</td>\n","      <td>140.0</td>\n","      <td>3449.0</td>\n","      <td>10.5</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>ford torino</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>393</th>\n","      <td>27.0</td>\n","      <td>4</td>\n","      <td>140.0</td>\n","      <td>86.00</td>\n","      <td>2790.0</td>\n","      <td>15.6</td>\n","      <td>82</td>\n","      <td>1</td>\n","      <td>ford mustang gl</td>\n","    </tr>\n","    <tr>\n","      <th>394</th>\n","      <td>44.0</td>\n","      <td>4</td>\n","      <td>97.0</td>\n","      <td>52.00</td>\n","      <td>2130.0</td>\n","      <td>24.6</td>\n","      <td>82</td>\n","      <td>2</td>\n","      <td>vw pickup</td>\n","    </tr>\n","    <tr>\n","      <th>395</th>\n","      <td>32.0</td>\n","      <td>4</td>\n","      <td>135.0</td>\n","      <td>84.00</td>\n","      <td>2295.0</td>\n","      <td>11.6</td>\n","      <td>82</td>\n","      <td>1</td>\n","      <td>dodge rampage</td>\n","    </tr>\n","    <tr>\n","      <th>396</th>\n","      <td>28.0</td>\n","      <td>4</td>\n","      <td>120.0</td>\n","      <td>79.00</td>\n","      <td>2625.0</td>\n","      <td>18.6</td>\n","      <td>82</td>\n","      <td>1</td>\n","      <td>ford ranger</td>\n","    </tr>\n","    <tr>\n","      <th>397</th>\n","      <td>31.0</td>\n","      <td>4</td>\n","      <td>119.0</td>\n","      <td>82.00</td>\n","      <td>2720.0</td>\n","      <td>19.4</td>\n","      <td>82</td>\n","      <td>1</td>\n","      <td>chevy s-10</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>398 rows × 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8cd6e851-3854-4c7b-80dd-393911326ca7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-67fda75b-9ebd-4145-bf5b-b1840f204dd2\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-67fda75b-9ebd-4145-bf5b-b1840f204dd2')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-67fda75b-9ebd-4145-bf5b-b1840f204dd2 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8cd6e851-3854-4c7b-80dd-393911326ca7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8cd6e851-3854-4c7b-80dd-393911326ca7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Oiw61i3KX-hv","executionInfo":{"status":"ok","timestamp":1690623671237,"user_tz":-540,"elapsed":10,"user":{"displayName":"심민기","userId":"11907351072291229928"}},"outputId":"23ec246a-58f9-4ca5-d959-c42ee524230d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 398 entries, 0 to 397\n","Data columns (total 9 columns):\n"," #   Column        Non-Null Count  Dtype  \n","---  ------        --------------  -----  \n"," 0   mpg           398 non-null    float64\n"," 1   cylinders     398 non-null    int64  \n"," 2   displacement  398 non-null    float64\n"," 3   horsepower    398 non-null    object \n"," 4   weight        398 non-null    float64\n"," 5   acceleration  398 non-null    float64\n"," 6   model year    398 non-null    int64  \n"," 7   origin        398 non-null    int64  \n"," 8   name          398 non-null    object \n","dtypes: float64(4), int64(3), object(2)\n","memory usage: 28.1+ KB\n"]}]},{"cell_type":"markdown","source":["## 데이터 전처리"],"metadata":{"id":"JyVwid4gYuDP"}},{"cell_type":"code","source":["df[\"horsepower\"].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NsF8fropYcPR","executionInfo":{"status":"ok","timestamp":1690623671237,"user_tz":-540,"elapsed":9,"user":{"displayName":"심민기","userId":"11907351072291229928"}},"outputId":"eab52fdd-7576-43b0-fb95-ae8b06a7e55d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['130.0', '165.0', '150.0', '140.0', '198.0', '220.0', '215.0',\n","       '225.0', '190.0', '170.0', '160.0', '95.00', '97.00', '85.00',\n","       '88.00', '46.00', '87.00', '90.00', '113.0', '200.0', '210.0',\n","       '193.0', '?', '100.0', '105.0', '175.0', '153.0', '180.0', '110.0',\n","       '72.00', '86.00', '70.00', '76.00', '65.00', '69.00', '60.00',\n","       '80.00', '54.00', '208.0', '155.0', '112.0', '92.00', '145.0',\n","       '137.0', '158.0', '167.0', '94.00', '107.0', '230.0', '49.00',\n","       '75.00', '91.00', '122.0', '67.00', '83.00', '78.00', '52.00',\n","       '61.00', '93.00', '148.0', '129.0', '96.00', '71.00', '98.00',\n","       '115.0', '53.00', '81.00', '79.00', '120.0', '152.0', '102.0',\n","       '108.0', '68.00', '58.00', '149.0', '89.00', '63.00', '48.00',\n","       '66.00', '139.0', '103.0', '125.0', '133.0', '138.0', '135.0',\n","       '142.0', '77.00', '62.00', '132.0', '84.00', '64.00', '74.00',\n","       '116.0', '82.00'], dtype=object)"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["# 마력 컬럼의 ? 값 제거\n","# ? -> Nan -> dropna() 삭제 -> horsepower 컬럼 dtype을 float으로 변환\n","\n","df['horsepower'].replace('?',np.nan, inplace = True)\n","df['horsepower'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jdpLH3V2YyaW","executionInfo":{"status":"ok","timestamp":1690623671237,"user_tz":-540,"elapsed":6,"user":{"displayName":"심민기","userId":"11907351072291229928"}},"outputId":"db97c2b6-4471-4b4e-b2d0-d25004b5750a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['130.0', '165.0', '150.0', '140.0', '198.0', '220.0', '215.0',\n","       '225.0', '190.0', '170.0', '160.0', '95.00', '97.00', '85.00',\n","       '88.00', '46.00', '87.00', '90.00', '113.0', '200.0', '210.0',\n","       '193.0', nan, '100.0', '105.0', '175.0', '153.0', '180.0', '110.0',\n","       '72.00', '86.00', '70.00', '76.00', '65.00', '69.00', '60.00',\n","       '80.00', '54.00', '208.0', '155.0', '112.0', '92.00', '145.0',\n","       '137.0', '158.0', '167.0', '94.00', '107.0', '230.0', '49.00',\n","       '75.00', '91.00', '122.0', '67.00', '83.00', '78.00', '52.00',\n","       '61.00', '93.00', '148.0', '129.0', '96.00', '71.00', '98.00',\n","       '115.0', '53.00', '81.00', '79.00', '120.0', '152.0', '102.0',\n","       '108.0', '68.00', '58.00', '149.0', '89.00', '63.00', '48.00',\n","       '66.00', '139.0', '103.0', '125.0', '133.0', '138.0', '135.0',\n","       '142.0', '77.00', '62.00', '132.0', '84.00', '64.00', '74.00',\n","       '116.0', '82.00'], dtype=object)"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df['horsepower'].isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mVXUNj3zZVSM","executionInfo":{"status":"ok","timestamp":1690623671753,"user_tz":-540,"elapsed":14,"user":{"displayName":"심민기","userId":"11907351072291229928"}},"outputId":"2c006ffa-17e1-467d-d374-951d005ff218"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["6"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["df.dropna(subset = ['horsepower'], axis = 0, inplace = True)\n","df.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Pl3hOmw-Zf1u","executionInfo":{"status":"ok","timestamp":1690623671754,"user_tz":-540,"elapsed":14,"user":{"displayName":"심민기","userId":"11907351072291229928"}},"outputId":"8be01597-4e47-4f76-d666-f43608b44c81"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["mpg             0\n","cylinders       0\n","displacement    0\n","horsepower      0\n","weight          0\n","acceleration    0\n","model year      0\n","origin          0\n","name            0\n","dtype: int64"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wI4cbxJzZ487","executionInfo":{"status":"ok","timestamp":1690623671754,"user_tz":-540,"elapsed":12,"user":{"displayName":"심민기","userId":"11907351072291229928"}},"outputId":"b9178b01-cd93-4ed1-e018-7f265f1979dc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 392 entries, 0 to 397\n","Data columns (total 9 columns):\n"," #   Column        Non-Null Count  Dtype  \n","---  ------        --------------  -----  \n"," 0   mpg           392 non-null    float64\n"," 1   cylinders     392 non-null    int64  \n"," 2   displacement  392 non-null    float64\n"," 3   horsepower    392 non-null    object \n"," 4   weight        392 non-null    float64\n"," 5   acceleration  392 non-null    float64\n"," 6   model year    392 non-null    int64  \n"," 7   origin        392 non-null    int64  \n"," 8   name          392 non-null    object \n","dtypes: float64(4), int64(3), object(2)\n","memory usage: 30.6+ KB\n"]}]},{"cell_type":"code","source":["df['horsepower'] = df['horsepower'].astype(\"float\")"],"metadata":{"id":"fWp33JNKZ6JA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jNAojWy9Z_7c","executionInfo":{"status":"ok","timestamp":1690623671755,"user_tz":-540,"elapsed":11,"user":{"displayName":"심민기","userId":"11907351072291229928"}},"outputId":"335c17d1-dea3-4563-d350-b5b9d351a060"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 392 entries, 0 to 397\n","Data columns (total 9 columns):\n"," #   Column        Non-Null Count  Dtype  \n","---  ------        --------------  -----  \n"," 0   mpg           392 non-null    float64\n"," 1   cylinders     392 non-null    int64  \n"," 2   displacement  392 non-null    float64\n"," 3   horsepower    392 non-null    float64\n"," 4   weight        392 non-null    float64\n"," 5   acceleration  392 non-null    float64\n"," 6   model year    392 non-null    int64  \n"," 7   origin        392 non-null    int64  \n"," 8   name          392 non-null    object \n","dtypes: float64(5), int64(3), object(1)\n","memory usage: 30.6+ KB\n"]}]},{"cell_type":"code","source":["df.head()"],"metadata":{"id":"iBFLZa8-aBdq","colab":{"base_uri":"https://localhost:8080/","height":409},"executionInfo":{"status":"ok","timestamp":1690623671756,"user_tz":-540,"elapsed":10,"user":{"displayName":"심민기","userId":"11907351072291229928"}},"outputId":"5a1e73b5-fa95-4187-c80c-e396a024903a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    mpg  cylinders  displacement  horsepower  weight  acceleration  \\\n","0  18.0          8         307.0       130.0  3504.0          12.0   \n","1  15.0          8         350.0       165.0  3693.0          11.5   \n","2  18.0          8         318.0       150.0  3436.0          11.0   \n","3  16.0          8         304.0       150.0  3433.0          12.0   \n","4  17.0          8         302.0       140.0  3449.0          10.5   \n","\n","   model year  origin                       name  \n","0          70       1  chevrolet chevelle malibu  \n","1          70       1          buick skylark 320  \n","2          70       1         plymouth satellite  \n","3          70       1              amc rebel sst  \n","4          70       1                ford torino  "],"text/html":["\n","\n","  <div id=\"df-214fcfc2-59ba-48cb-9444-c2b6381b248e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mpg</th>\n","      <th>cylinders</th>\n","      <th>displacement</th>\n","      <th>horsepower</th>\n","      <th>weight</th>\n","      <th>acceleration</th>\n","      <th>model year</th>\n","      <th>origin</th>\n","      <th>name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>18.0</td>\n","      <td>8</td>\n","      <td>307.0</td>\n","      <td>130.0</td>\n","      <td>3504.0</td>\n","      <td>12.0</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>chevrolet chevelle malibu</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>15.0</td>\n","      <td>8</td>\n","      <td>350.0</td>\n","      <td>165.0</td>\n","      <td>3693.0</td>\n","      <td>11.5</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>buick skylark 320</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>18.0</td>\n","      <td>8</td>\n","      <td>318.0</td>\n","      <td>150.0</td>\n","      <td>3436.0</td>\n","      <td>11.0</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>plymouth satellite</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>16.0</td>\n","      <td>8</td>\n","      <td>304.0</td>\n","      <td>150.0</td>\n","      <td>3433.0</td>\n","      <td>12.0</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>amc rebel sst</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>17.0</td>\n","      <td>8</td>\n","      <td>302.0</td>\n","      <td>140.0</td>\n","      <td>3449.0</td>\n","      <td>10.5</td>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>ford torino</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-214fcfc2-59ba-48cb-9444-c2b6381b248e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-1a36a095-9e40-43a8-9ea4-b41626e85839\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1a36a095-9e40-43a8-9ea4-b41626e85839')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-1a36a095-9e40-43a8-9ea4-b41626e85839 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-214fcfc2-59ba-48cb-9444-c2b6381b248e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-214fcfc2-59ba-48cb-9444-c2b6381b248e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["df_3 = df.drop(['acceleration', 'model year','origin','mpg','name','cylinders'], axis=1 ) # null 데이터를 지우고 싶으면 axis = 0 컬럼 자체를 지우고 싶으면 axis = 1\n","\n","df_3"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"oasdB7R5AXxI","executionInfo":{"status":"ok","timestamp":1690623672328,"user_tz":-540,"elapsed":10,"user":{"displayName":"심민기","userId":"11907351072291229928"}},"outputId":"9c00ed3f-a8fd-4f54-c76c-f19d07a4a2cf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     displacement  horsepower  weight\n","0           307.0       130.0  3504.0\n","1           350.0       165.0  3693.0\n","2           318.0       150.0  3436.0\n","3           304.0       150.0  3433.0\n","4           302.0       140.0  3449.0\n","..            ...         ...     ...\n","393         140.0        86.0  2790.0\n","394          97.0        52.0  2130.0\n","395         135.0        84.0  2295.0\n","396         120.0        79.0  2625.0\n","397         119.0        82.0  2720.0\n","\n","[392 rows x 3 columns]"],"text/html":["\n","\n","  <div id=\"df-592b087d-1298-4bcb-a979-ba2e1f49ba75\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>displacement</th>\n","      <th>horsepower</th>\n","      <th>weight</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>307.0</td>\n","      <td>130.0</td>\n","      <td>3504.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>350.0</td>\n","      <td>165.0</td>\n","      <td>3693.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>318.0</td>\n","      <td>150.0</td>\n","      <td>3436.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>304.0</td>\n","      <td>150.0</td>\n","      <td>3433.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>302.0</td>\n","      <td>140.0</td>\n","      <td>3449.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>393</th>\n","      <td>140.0</td>\n","      <td>86.0</td>\n","      <td>2790.0</td>\n","    </tr>\n","    <tr>\n","      <th>394</th>\n","      <td>97.0</td>\n","      <td>52.0</td>\n","      <td>2130.0</td>\n","    </tr>\n","    <tr>\n","      <th>395</th>\n","      <td>135.0</td>\n","      <td>84.0</td>\n","      <td>2295.0</td>\n","    </tr>\n","    <tr>\n","      <th>396</th>\n","      <td>120.0</td>\n","      <td>79.0</td>\n","      <td>2625.0</td>\n","    </tr>\n","    <tr>\n","      <th>397</th>\n","      <td>119.0</td>\n","      <td>82.0</td>\n","      <td>2720.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>392 rows × 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-592b087d-1298-4bcb-a979-ba2e1f49ba75')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-670e354f-d3d7-4897-b1be-29e53aa4209c\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-670e354f-d3d7-4897-b1be-29e53aa4209c')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-670e354f-d3d7-4897-b1be-29e53aa4209c button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-592b087d-1298-4bcb-a979-ba2e1f49ba75 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-592b087d-1298-4bcb-a979-ba2e1f49ba75');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["df_1 = df['mpg']\n","\n","df_1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JLkjiSC7Axq1","executionInfo":{"status":"ok","timestamp":1690623672329,"user_tz":-540,"elapsed":10,"user":{"displayName":"심민기","userId":"11907351072291229928"}},"outputId":"a492d373-f024-4967-a8fb-752d27f2f21a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      18.0\n","1      15.0\n","2      18.0\n","3      16.0\n","4      17.0\n","       ... \n","393    27.0\n","394    44.0\n","395    32.0\n","396    28.0\n","397    31.0\n","Name: mpg, Length: 392, dtype: float64"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["df_3.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OMhtxsgXBMQ8","executionInfo":{"status":"ok","timestamp":1690623672329,"user_tz":-540,"elapsed":8,"user":{"displayName":"심민기","userId":"11907351072291229928"}},"outputId":"dfca43e2-e507-4e93-e91b-8a025f260057"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(392, 3)"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["df_1.shape\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PX5v-JA3BcM3","executionInfo":{"status":"ok","timestamp":1690623672329,"user_tz":-540,"elapsed":6,"user":{"displayName":"심민기","userId":"11907351072291229928"}},"outputId":"c686c2e6-c4b4-4420-d729-559997bbe547"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(392,)"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","X_train, X_test, y_train, y_test = train_test_split(df_3, df_1, test_size = 0.3,  random_state = 7) # 70: 30"],"metadata":{"id":"-WTWG7UeBdss"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JsZSa7URBgY9","executionInfo":{"status":"ok","timestamp":1690623672890,"user_tz":-540,"elapsed":10,"user":{"displayName":"심민기","userId":"11907351072291229928"}},"outputId":"e57a78ac-0239-48fc-abfa-5d58de8465aa"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(274, 3)"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["X_test.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1uGJ9OfnBooW","executionInfo":{"status":"ok","timestamp":1690623672890,"user_tz":-540,"elapsed":8,"user":{"displayName":"심민기","userId":"11907351072291229928"}},"outputId":"cb3aacfc-85b5-406a-bd96-e38fcb87fa53"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(118, 3)"]},"metadata":{},"execution_count":20}]},{"cell_type":"markdown","source":["## 라쏘 (마력, 배기량, 무게)\n"],"metadata":{"id":"8OB0EB6hGiTo"}},{"cell_type":"code","source":["from sklearn.linear_model import Lasso\n","\n","train_set = []\n","test_set = []\n","\n","for n in range(1,1000):\n","\n","# range (start, finish, gab)\n","\n","  lasso = Lasso(alpha=0.001*n).fit(X_train, y_train) # alpha=1 규제 기본값\n","\n","  train_set.append(lasso.score(X_train, y_train))\n","  test_set.append(lasso.score(X_test, y_test))\n","\n","\n","\n","\n","print(max(train_set))\n","print(max(test_set))\n","\n","plt.figure(dpi = 100)\n","\n","plt.plot(range(1,1000)  , train_set, label='train 정확도')\n","\n","plt.plot(range(1,1000)  , test_set, label='테스트 정확도')\n","\n","plt.xlabel('alpha 값 (1000배)')\n","plt.ylabel('정확도')\n","plt.legend()\n","plt.show()\n","\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":484},"id":"dbhf7764GiHA","executionInfo":{"status":"ok","timestamp":1690623677931,"user_tz":-540,"elapsed":5045,"user":{"displayName":"심민기","userId":"11907351072291229928"}},"outputId":"c87f24c6-8c33-4ea4-9f58-28e4fddfa7de"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.6974170721181139\n","0.7210084602980533\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## feature 마력, 배기량, 무게, 속가"],"metadata":{"id":"_cGFvHMxJtNW"}},{"cell_type":"code","source":["df_4 = df.drop(['model year','origin','mpg','name','cylinders'], axis=1 ) # null 데이터를 지우고 싶으면 axis = 0 컬럼 자체를 지우고 싶으면 axis = 1\n","\n","df_4"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"cKBHZjTHG5BZ","executionInfo":{"status":"ok","timestamp":1690623677933,"user_tz":-540,"elapsed":10,"user":{"displayName":"심민기","userId":"11907351072291229928"}},"outputId":"099fea6e-8574-47ad-fdb0-54f8bc4bbc31"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     displacement  horsepower  weight  acceleration\n","0           307.0       130.0  3504.0          12.0\n","1           350.0       165.0  3693.0          11.5\n","2           318.0       150.0  3436.0          11.0\n","3           304.0       150.0  3433.0          12.0\n","4           302.0       140.0  3449.0          10.5\n","..            ...         ...     ...           ...\n","393         140.0        86.0  2790.0          15.6\n","394          97.0        52.0  2130.0          24.6\n","395         135.0        84.0  2295.0          11.6\n","396         120.0        79.0  2625.0          18.6\n","397         119.0        82.0  2720.0          19.4\n","\n","[392 rows x 4 columns]"],"text/html":["\n","\n","  <div id=\"df-5c8e32ea-2ae6-4564-8deb-7eb3924ec704\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>displacement</th>\n","      <th>horsepower</th>\n","      <th>weight</th>\n","      <th>acceleration</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>307.0</td>\n","      <td>130.0</td>\n","      <td>3504.0</td>\n","      <td>12.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>350.0</td>\n","      <td>165.0</td>\n","      <td>3693.0</td>\n","      <td>11.5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>318.0</td>\n","      <td>150.0</td>\n","      <td>3436.0</td>\n","      <td>11.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>304.0</td>\n","      <td>150.0</td>\n","      <td>3433.0</td>\n","      <td>12.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>302.0</td>\n","      <td>140.0</td>\n","      <td>3449.0</td>\n","      <td>10.5</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>393</th>\n","      <td>140.0</td>\n","      <td>86.0</td>\n","      <td>2790.0</td>\n","      <td>15.6</td>\n","    </tr>\n","    <tr>\n","      <th>394</th>\n","      <td>97.0</td>\n","      <td>52.0</td>\n","      <td>2130.0</td>\n","      <td>24.6</td>\n","    </tr>\n","    <tr>\n","      <th>395</th>\n","      <td>135.0</td>\n","      <td>84.0</td>\n","      <td>2295.0</td>\n","      <td>11.6</td>\n","    </tr>\n","    <tr>\n","      <th>396</th>\n","      <td>120.0</td>\n","      <td>79.0</td>\n","      <td>2625.0</td>\n","      <td>18.6</td>\n","    </tr>\n","    <tr>\n","      <th>397</th>\n","      <td>119.0</td>\n","      <td>82.0</td>\n","      <td>2720.0</td>\n","      <td>19.4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>392 rows × 4 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5c8e32ea-2ae6-4564-8deb-7eb3924ec704')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-88ed2dcb-5394-47b1-b53c-ebfcdc511fb1\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-88ed2dcb-5394-47b1-b53c-ebfcdc511fb1')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-88ed2dcb-5394-47b1-b53c-ebfcdc511fb1 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5c8e32ea-2ae6-4564-8deb-7eb3924ec704 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5c8e32ea-2ae6-4564-8deb-7eb3924ec704');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","X_train, X_test, y_train, y_test = train_test_split(df_4, df_1, test_size = 0.3,  random_state = 7) # 70: 30"],"metadata":{"id":"HxUkOcITJ3-A"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_set = []\n","test_set = []\n","\n","for n in range(1,1000):\n","\n","  lasso = Lasso(alpha=0.001*n).fit(X_train, y_train) # alpha=1 규제 기본값\n","\n","  train_set.append(lasso.score(X_train, y_train))\n","  test_set.append(lasso.score(X_test, y_test))\n","\n","\n","\n","\n","print(max(train_set))\n","print(max(test_set))\n","\n","plt.figure(dpi = 100)\n","\n","plt.plot(range(1,1000)  , train_set, label='train 정확도')\n","\n","plt.plot(range(1,1000)  , test_set, label='테스트 정확도')\n","\n","plt.xlabel('alpha 값 (1000배)')\n","plt.ylabel('정확도')\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":484},"id":"JXZkYxiDJ9Rw","executionInfo":{"status":"ok","timestamp":1690623683740,"user_tz":-540,"elapsed":5816,"user":{"displayName":"심민기","userId":"11907351072291229928"}},"outputId":"f5f11187-318c-4c2f-f1a3-12f5a64c5760"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.69742140125998\n","0.72107615101251\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAkYAAAGvCAYAAAC+fhq7AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAA/7UlEQVR4nO3deXQUVeL28ac7CUlYEhgRAiagCAOEBIIKSEYJKiAERhEEEQcXEGRAcZ9xAxVRRHFhfioEeHFBUBAVUJBNR5BBGFTiwjYiiwGCLIaEJJ2tU+8fKUo63Z10k4Ym8P2cU2dSt+reulXE9DNVt2/ZDMMwBAAAANmD3QEAAIAzBcEIAADARDACAAAwEYwAAABMBCMAAAATwQgAAMBEMAIAADCFBrsD1Ulpaan279+vOnXqyGazBbs7AADAB4Zh6NixY2rcuLHs9orvCRGM/LB//37FxcUFuxsAAOAkZGRkKDY2tsJ9CEZ+qFOnjqSyCxsVFRXk3gAAAF/k5OQoLi7O+hyvCMHID8cfn0VFRRGMAACoZnwZBsPgawAAABPBCAAAwEQwAgAAMBGMAAAATAQjAAAAE8EIAADARDACAAAwEYwAAABMBCMAAAATwQgAAMBEMAIAADARjAAAAEwEozNB4THp0P+kYkewewIAwDktNNgdgKTda6X3BpX9XLuhVLepVLeJVM/837pNy36OipVCawS3rwAAnMUIRmeCwmNSjdpSUa6U+1vZsve/7vvZ7FKdxn+EpqgLpIiosrrhdcz/re2+HlZLsnNzEACAytgMwzCC3YnqIicnR9HR0crOzlZUVFRgGzcMyZElHd0jZe2Rjv5a9vPRX/9YLznZR222cqHJQ3jyaT2q7OfQ8ICeOgAAp5I/n9/cMTpT2GxSzT+VLY3bu283DCnvkBmUdpf9b87+srtMhcfM/839Y70wVyo6Jhmlkoyyn4uOBaav9jAzLNXxL2yF1/Fcxx4SmH4BAFBFBKPqwmaTajcoW2Iv862OYZQN6PYWntzCVCX7FOeXtVtaXHZ3y5EVmHMLq+lnuKpgn7DIsmsFAMBJIBidzWw2qUbNsqV2g6q3V+osF5zMu1LWHSpfAtgJdUpLytotzi9b8g5WvY+2kEoeG9bx71FiSFjV+wQAqDYIRvCdPUSKiC5bqsowpJJC3+9mVXZ3qyjXbNcpFWaXLYEQEu4alPwel8UgeACoTghGCA6bTQqLKFtq1a96e6WlUnGeD+HqhPFXLnexytVxFpa16yyU8gul/CNV76Pfg+CP390qNy4r3PwmIlM3AEDAEYxwdrDb/7ijEwjOYtegVHjMQ5iqJFyduN+pGAQfUsM9LLmErjpeHh16CFw1ajE2CwBEMAI8Cwn741uCVWUYZWOoTvpRYbkxXCUFZe06iyTH72VLVdnsZkCq7fnuVIVlHgJXCH9aAFRP/PUCTjWbreyOTI1akhpWvT1nsQ/fKMzxfDfLUwiTUXZHqzCnbAnEDa3QiAoeB3oZq+WtLDSCu1kAThuCEVDdhIRJkfXKlqoyDKkoz/3u1IljsioNXCeUOYvK2i0pKFvyD1e9j7YQ13DlEqAqC1xRzJsFwC9BD0YzZszQv/71L9ntdjVu3FgzZ87UBRdc4Lbf0qVL9dhjj7mUlZSU6NChQ/rtt9+sfV566SUdOnRIpaWluuKKK/Tyyy+rZs2aVp2tW7dq5MiRys7Ols1m09ixY9WvX79Te5LAmcpmM8NGbSkQw7NKirwEqAoCl7cQduI3DQuyy5ZACKvlYSyWl8Dldd4sZoEHzlZBfSXI8uXL9cQTT2jVqlWKjo7W/Pnz9dJLL2nDhg0+1Z83b54WLlyo9957T5K0Zs0aXXzxxbrgggtUUlKi2267TY0aNdLkyZMlSQUFBWrbtq1mzJihlJQUHThwQCkpKfrggw/Utm3bSo93Sl8JAsBVaekfAanCObO8zKNVPnAdnzcrkFxmgS8/q7u3Mi+Bi+kcgFPGn8/voAajfv36afjw4erVq5dVlpycrDfeeENJSUmV1r/qqqs0duxYXX311R63p6en69Zbb9UPP/wgSVq8eLHmzJmjefPmWftMnz5dW7Zs0auvvlrp8QhGQDV1fN4sr98u9DVwmWUn/d7CiniYzsHja3R8CWFMTgqcqNq8K+3zzz/X7NmzXcpSUlK0cuXKSoPR9u3btXfvXl111VVe9/n9998VERFhra9atUopKSlux5syZYrH+oWFhSosLLTWc3JyKuwTgDPUifNm6fyqt+cscb2b5SlwFeb4MPj9VE7nEO49XHksq+DbhrxqB+eQoAWj3NxchYaGqlatWi7lcXFx+vHHHyutP336dA0bNky2Cv5jnTZtmm699VZrff/+/erevbvb8Xbu3Omx/sSJE/X0009X2hcA55iQUCmybtlSVV6nc/AyGalb4CpXdiomJ7XZPQx09zLA/cSAdWIAOx60atTmkSHOaEELRkePHnW5m3NcRESE8vPzK6xbUFCguXPnatOmTV73Wb58udLT013uSHk6ZkREhAoKCmQYhlvIevTRR/XAAw9Y6zk5OYqLi6uwbwDgl1MxnUNlc2F5LPMyv5ZkTucQwFfthNVyf/Tn9rJob4PieWSIUytowSg8PFwFBQVu5Q6HQ5GRkRXWXbBggZKTkxUTE+Nxe0ZGhkaMGKEPP/xQ4eF/fGvE0zEdDofCw8M93nkKDw93qQ8AZ7xATk7q9qqdnEruXh3zcMfrhHLDWdZucV7Zklv1Lv4xZ5a3QOXpBdJe7nKFhvPIEMELRvXr15fD4VBubq5q165tlWdkZCg2NrbCumlpaXr88cc9bsvLy1Pfvn01YcIEXXbZZS7bYmNj9euvv7qU+XI8ADgnBfJVO4ZRNreVz4Gq/BQPXh4ZBnLOLHuoh/FXdbzcrargsSGv2anWghaMbDabOnXqpDVr1ig1NdUqX716tZ599lmv9TZv3qyMjAz16NHDbZvT6dSgQYPUq1cvDRkyxG17cnKylixZotGjR7scLzk5uYpnAwCokM1WNog7LFKqHYAB8NacWZUFqspmhj9WNsZLKpvSwZFVtlSVy2t2fHxs6Lb9hHImJj1tgvqttDFjxmjcuHG64oorFBUVpfnz5ysvL09du3b1WictLU1Dhw6V3cPgvXvvvVeRkZF65plnPNa98cYbNW7cOK1evdqax2jy5Ml69913A3VKAIDTIbSGFBqoR4ZOz/NfuY3TqmBc1on1TsVrdsJqlgtU5e9WeXps6OVF0qE1AtChs1dQg9ENN9ygjIwMde7cWXa7XTExMVq0aJHsdruKi4s1cOBATZ061RpLVFhYqA8++EAbN250aysrK0uvv/66WrZsqfbt21vlNptNy5YtU8OGDVWrVi0tXrxYo0aNUm5urkpLS/X000+rU6dOp+2cAQBnGHuIFBFdtlRV+dfsuD02LHe3qrLHhscnJi3ON+9s/Vb1PnqdyqGCQOXtLtdZ+C7DoE7wWN0wwSMA4LQ5PjGpx0Dl5W5VRXe5Sty/8FRlthDvj//8fWx4CsdlVZsJHgEAgBcnTkxaq37V2zs+lYOniUn9fWxYnFfWpuGUCo6WLVVmzv7e5nrp+tcD0N7JIRgBAHAuCOhUDs6yR4YVBqoKpncoX+/E2d9LnVXvXxUQjAAAgH/sIVJEVNlSVeVnfw8N7vyBBCMAABA8gZ79vYp4YQ0AAICJYAQAAGAiGAEAAJgIRgAAACaCEQAAgIlgBAAAYCIYAQAAmAhGAAAAJoIRAACAiWAEAABgIhgBAACYCEYAAAAmghEAAICJYAQAAGAiGAEAAJgIRgAAACaCEQAAgIlgBAAAYCIYAQAAmAhGAAAAJoIRAACAiWAEAABgIhgBAACYCEYAAAAmghEAAICJYAQAAGAiGAEAAJgIRgAAACaCEQAAgIlgBAAAYCIYAQAAmAhGAAAAJoIRAACAiWAEAABgIhgBAACYCEYAAAAmghEAAICJYAQAAGAiGAEAAJgIRgAAACaCEQAAgIlgBAAAYCIYAQAAmAhGAAAAJoIRAACAiWAEAABgIhgBAACYCEYAAAAmghEAAICJYAQAAGAiGAEAAJgIRgAAACaCEQAAgIlgBAAAYCIYAQAAmIIajGbMmKHExES1a9dOvXr10r59+zzut3TpUiUlJbksCQkJatiwodu+s2bNUnh4uHbv3u22LTQ01K2dpUuXBvq0AABANRUarAMvX75c06dP19q1axUdHa358+erX79+2rBhg9u+qampSk1NdSmbN2+eFi5c6FI2duxYffPNN6pXr55KSkrc2nE6nfrmm28UGhq00wYAAGewoN0xSktL0/jx4xUdHS1JGjhwoEJCQpSenu5T/WnTpmn48OHWemlpqRo1aqRPP/1UERERp6LLAADgLBe0YPT555+rS5cuLmUpKSlauXJlpXW3b9+uvXv36qqrrrLK7Ha7Ro0apZCQkID1sbCwUDk5OS4LAAA4ewUlGOXm5io0NFS1atVyKY+Li9POnTsrrT99+nQNGzZMNpvtVHVRkjRx4kRFR0dbS1xc3Ck9HgAACK6gBKOjR496fNwVERGh/Pz8CusWFBRo7ty5uv3220/q2D179lRiYqI6deqkV199VaWlpV73ffTRR5WdnW0tGRkZJ3VMAABQPQRlFHJ4eLgKCgrcyh0OhyIjIyusu2DBAiUnJysmJsbv42ZmZlr1du/erVtvvVX5+fl67LHHvPYzPDzc7+MAAIDqKSh3jOrXry+Hw6Hc3FyX8oyMDMXGxlZYNy0tzWXQtT9ODFMXXnihnnvuOS1YsOCk2gIAAGefoAQjm82mTp06ac2aNS7lq1evVnJystd6mzdvVkZGhnr06BGQfjidTr66DwAALEH7VtqYMWM0btw465te8+fPV15enrp27eq1TlpamoYOHSq73f9u5+fn69ChQ9b67t279dBDD2no0KF+twUAAM5OQbtdcsMNNygjI0OdO3eW3W5XTEyMFi1aJLvdruLiYg0cOFBTp061Hn8VFhbqgw8+0MaNGyttu0aNGgoLC3Mpy8rKUp8+fVRcXKzQ0FBFRkbq3nvv1d/+9rdTcn4AAKD6sRmGYQS7E9VFTk6OoqOjlZ2draioqGB3BwAA+MCfz29eIgsAAGAiGAEAAJgIRgAAACaCEQAAgIlgBAAAYCIYAQAAmAhGAAAAJoIRAACAiWAEAABgIhgBAACYCEYAAAAmghEAAICJYAQAAGAiGAEAAJgIRgAAACaCEQAAgIlgBAAAYCIYAQAAmAhGAAAAJoIRAACAiWAEAABgIhgBAACYCEYAAAAmghEAAICJYAQAAGAiGAEAAJgIRgAAACaCEQAAgIlgBAAAYCIYAQAAmAhGAAAAJoIRAACAiWAEAABgIhgBAACYCEYAAAAmghEAAICJYAQAAGAiGAEAAJgIRgAAACaCEQAAgIlgBAAAYCIYAQAAmAhGAAAAJoIRAACAiWAEAABgIhgBAACYCEYAAAAmghEAAICJYAQAAGAiGAEAAJgIRgAAAKbQYHcAAICqcjqdKi4uDnY3ECRhYWEKCQkJSFsEIwBAtWUYhg4cOKCjR48GuysIsrp16yomJkY2m61K7RCMAADV1vFQ1KBBA9WsWbPKH4qofgzDUH5+vg4ePChJatSoUZXaIxgBAKolp9NphaLzzjsv2N1BEEVGRkqSDh48qAYNGlTpsRqDrwEA1dLxMUU1a9YMck9wJjj+e1DVsWYEIwBAtcbjM0iB+z0IaDAaP358IJsDAABBtGjRIg0fPtyt/LXXXlNSUpKSkpJ06aWXKicnx9rWvXt3ff/996ezmwEV0GD0/vvvB7I5AABQgcGDB2vPnj0nXb979+5q1aqVtTRs2FB33nmntb24uNjjo6m7775b6enpSk9P17fffquoqKgK62zcuFH169dXQkKC1+Xrr78+6fMIJJ8HX9922216++23Xcp69uypZcuWWeuGYfjdgRkzZuhf//qX7Ha7GjdurJkzZ+qCCy5w22/p0qV67LHHXMpKSkp06NAh/fbbby7ls2bN0t///ndt375dF154ocu2rVu3auTIkcrOzpbNZtPYsWPVr18/v/sNAMDJys3N1Ztvvql77rmnSu3MnTu3SvVXrlzpsj5w4EB17drV6/7Lli3TI4884nGb3W7XqlWrPG7bs2ePrr32Ws2ZM+ek+3q6+ByMNm3a5FZWPqX6+3xv+fLlmj59utauXavo6GjNnz9f/fr104YNG9z2TU1NVWpqqkvZvHnztHDhQpeysWPH6ptvvlG9evVUUlLisq2goEDXX3+9ZsyYoZSUFB04cEApKSlq3ry52rZt61ffAQA4WYcPH9akSZOqHIwCaerUqQoNDVXfvn3Vpk0bOZ1OHTt2TN27d7f26dmzp1JSUjR58mTl5eWpRo0ays/PV+fOndW/f/8K268uY8Gq9CitqieZlpam8ePHKzo6WlJZUg0JCVF6erpP9adNm+by7LO0tFSNGjXSp59+qoiICLf9V6xYofbt2yslJUWSFBMTowcffFCzZs2q0nkAAM4MhmEov6gkKIuvT00mTZqk1NRUHTx4UElJSXr++eclSSNGjNDbb7+t3r17KykpSXv27NGuXbt07bXXKj4+Xm3btlXPnj21d+9eq62WLVvq119/lSQ9+eSTGjdunLp166b4+HjFx8fr//7v/3y6ZpMnT9aUKVOUkZEhh8OhzZs3a9u2bZoyZYrb/mPHjlVMTIyef/55jR8/XpMnT9bMmTO1bt06a59BgwYpISFBX375pU/X5EwS1HmMPv/8c82ePdulLCUlRStXrlRSUlKFdbdv3669e/fqqquussrsdrtGjRrltc6qVausUHTi8Tz9w0tSYWGhCgsLrfUTB5cBAM48jmKn4sctD8qxt4y/VjVrVP6x+s9//lM33XSTrrjiCpcbAUVFRXr55Zf1ySefqEmTJpKkXbt26ZVXXlF8fLwk6dlnn9Ujjzyid999V1LZ51RRUZGkspsVr7zyij7//HN16NBBhw8fVvv27XXllVd6/Uz9+eefdc8996h58+b66aefNHv2bF122WW655579OCDD3qsEx8fr1mzZqlRo0Zq2LChtmzZoh07drhMrPj+++/rsssus9ZtNpvbU5wzVZXuGP3yyy+qWbOmatasaU2u5Kvc3FyFhoaqVq1aLuVxcXHauXNnpfWnT5+uYcOG+XXXav/+/YqLi/P5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9SVLluiVV16xQpEnHTt29JoNjo9R9mTbtm3KysoK6rfbfQpGX3/9tfVzv379lJCQoLCwMK1fv16TJ0+WYRjq06fPKeskAABnE8MwqhSK8vLy9Pjjj2vkyJH6+9//rkWLFlW4f6DGAe/cuVNPPPGEPv74Y913331atmyZJPc7Rv/973+1aNEiffnll6pdu7acTqciIiL04IMPqlatWm4vjz0VfT1ZPgWj48ntwgsv1BVXXKGvv/5atWrVsm512Ww2vfDCC6eulwAA+MIwpGL3xzqnRVhN6SQ/1EtKSnTo0CFlZ2d7fCx1ouLiYg0dOlTXXXedXnrpJd122226//77rS9KeZKamur18dRNN92ksWPHVtrHTZs26Y477tCxY8e0fft2vfrqq9a22rVru+z7448/6qWXXtLq1autoDNv3jzdf//9mj59uiTpvffe05dffqnu3btX2PfTza8xRh9//LGksq/oH3f99ddXeAsPAIDTpjhfei5In0mP7ZdqeH+8VF5SUpKksuEqt99+u/Lz8/XNN99UOGZo165dGjFihOLi4vTiiy9KkmbNmqVhw4YpNTVVU6dOVdOmTd3qLV26VM2bN/fvfEwOh0Mvv/yyPvzwQ3344YdyOp0aNGiQ3n77bb3wwguKjY11q3P++ecrMzNTaWlpuuSSS5SVlaX/9//+n3r16mXtc/PNN+u1115zqWez2VRSUqLQUL+HQAeMT0fOzMz0OgCsSZMm+tOf/qTS0lLt3LlTzZo1q9LtQQAAzgXp6ekey7t27eqx/PXXX9cLL7ygp556SnfccYdVHhISorfeekvz5s1Tr169NHToUD300EPW9ubNm6tbt25eX7TbpEkTrVixwuO2rKwsde7cWQMHDtRXX31ljSvasGGD0tLSVFBQ4LFeTEyM1q9frwULFuimm25Sr1699NRTT1kTRnvTs2dPtWvXzgpI+/fvV5MmTaztnTt31ptvvllhG1XlUzDq06ePiouLZRiGduzYoRYtWlgj6Tt37qznn39eXbp0kdPpVHh4uP7973+73FUCAOC0CKtZducmWMc+hW688UYNGzbMa8C56aabNGDAAB07dsylfOHChSd9zHr16unrr792+0wPCwvT3Xffba2f+OaLf//731q9erW1brPZdPjwYU2fPl0TJkxQXl6ebr/9do/H++CDD6yfd+/erZ49e2rb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1rrT6TSaNGliHD58+LT0u7qYNWuWcd1113ndzrUOnLCwMOv/mB7Xu3dv48MPP+RvRxU4nU7j9ddfN0pKSoymTZu6BKNAXNf777/feOONN1zauPnmm42PP/64yn3nUVqQff755+rSpYtLWUpKilauXBmkHp0dfv/9d0VEREiSVq1apZSUFJftJ17j9PR0NW7cWHXr1rW2R0VFqUmTJvruu+9OW5+ri/z8fI0bN07PP/+8S7mn63zllVfqiy++kGEYOnLkiPbt26fWrVtb2+12u5KTk10eEUF6//33ddddd3ndzrUOnMsvv1wvv/yytb5mzRqtW7dOHTt25G9HFdjtdo0aNUohISFu2wJxXStro0p9r3ILOGm5ubkKDQ1VrVq1XMrj4uK0c+fOIPXq7DBt2jTdeuutkqT9+/crLi7OZfuJ19jT9vL74A/PPfecbrnlFjVu3Nil3NN1jIyMVEREhA4ePKjMzEyP7xrkOrv7/vvvFRkZqf79+6tt27a6+uqrtWzZMms71zpw3n77bc2bN0/XXnutxowZo379+undd99VbGwsfztOkUBc18raqApeIhtER48ete5qnCgiIsJl4DD8s3z5cqWnp2v27NmSPF/niIgIFRQUyDAM/h388Msvv+jDDz/Upk2b3LYdPXpULVu2dCs/fh25zr47cuSIJkyYoNdff12tWrXSDz/8oD59+uidd95R165dudYB1LRpU40ePVr333+/VqxYoZtvvlkdOnSQxN+OUyUQ19VbG4G47twxCqLw8HAVFBS4lTscDkVGRgahR9VfRkaGRowYoblz51pTynu6zg6HQ+Hh4bLZbPw7+OHee+/VhAkTPP7Rquw6cp19Z7fb9Y9//EOtWrWSJLVt21b333+/Zs2aJYlrHUh/+9vf9M4772jVqlX65ZdfFBYWprZt22rv3r387ThFAnFdvbURiOvOHaMgql+/vhwOh3Jzc1W7dm2rPCMjw+NtcFQsLy9Pffv21YQJE3TZZZdZ5bGxsfr1119d9j3xGnvaXn4fSMuWLVN+fr769+/vcbun63j897tBgwYyDMPrdW7Xrt0p6XN11aBBA/35z392KWvevLlWrFghiWsdKDt27NDSpUu1Z88eRUdHSyp7tHb77bfrjTfe4G/HKRKI63p8nzZt2njcXhXcMQoim82mTp06ac2aNS7lq1evVnJycpB6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3WazqU6dOhWe3+7du9WsWbMK9ynv6NGjVtA7UUREhPLz8yvd7q2NE7dX5o477tC2bduUmprqtu2iiy7Snj17fGoHONdxxwiAX/bt26cXXnhBX3/9tY4dO6bc3Fxdc801XvdPSkpyWU9MTNSuXbus9T/96U8u2xs0aKBffvnFWv/vf/+rKVOmaPPmzSouLra+/eXJK6+8oho1amjdunVq1KiRJKmkpMQafJ2Tk6OtW7dWeH5ZWVkud2J8ER4eroKCArfy43dpKtp+fMySp30CdZenXr16+v3336vcDnAu4I4RAJ8VFxerS5cuql+/vj7++GNt3bpVjzzySKV1TpSfn1/hh73NZlNpaakkacuWLerTp4/++te/as2aNdq8eXOFIWzixInq0qWLHnvsMausZcuW1re5nn32Wb3zzjsV9rdevXrKysqqcJ/yYmNj9euvv7qUORwO5ebmqkGDBh63S1JGRob1iM3TPidub9SokRYvXqyEhAQlJCQoPj7eLVR6k5WV5fO+wLmOYATAZ99//71q1qypsWPH6oILLpAkbd68ucI65R97ffvtt9Y3ryqzdOlS3XTTTRo0aJCioqIklYWlihiG4TJ42+l0Wuv79++v9Kv7F154ocu4Hl8kJydr9erVLmVr1qxRhw4dZLfb1ahRI9WuXdul76WlpVq7dq2Sk5O9trF69Wpre6dOnfT777/rp59+0k8//aQtW7b43M9du3a5jYEC4BnBCIDPGjRooIMHD+rgwYOSpPXr11uTJ3ozfvx4ayLD2bNny+FwqGvXrj4dr1GjRtq8ebP1rbfXXntNv/32W6X1PvroIzVv3lzNmzfXvn37JJWNd1qxYoU++uijCutGRkaqSZMmfk2M2KVLFxUXF2vOnDmSygadP/nkk7rnnnusfcaMGaN//OMfKioqkiRNnjxZ7dq1s8YzDRs2THPmzLHC0/bt2zV79my3SR399fPPP6tJkyYMvAZ8xBgjAD5r0qSJJk6caD3OatasmV588UUrHIWFhVkDpY+75557dOWVVyovL0+NGjXS0qVLZbPZJEk1atRw+Sq9VDbW5njZTTfdpP/+97/WOKVu3brp73//u9tEh+X169fP+vbWhRdeKEkaN26cBgwYoMzMTL3xxhsaNWqU1/qjR4/WjBkz9MILL7ht89Rnm82mhQsXasSIEXr++efldDp15513asCAAdY+9913n44cOaJ27drJbrerdevWevvtt63tsbGxmj17toYMGaKSkhKFhITozTff9OlOT1hYmMLCwjxumzlzpkaPHl1pGwDK2AymRAVwilx44YXavXv3aT3mli1brHFQklRYWKg77rhDn332mVatWqXCwkJdf/316t69u9srP44zDEN9+vTR7Nmzq93YnCFDhmjkyJH6y1/+oqysLN1yyy1asmSJFUYBVIxgBOCUadWqlbZt2xbsbmjdunVKSkqyJmh0Op0e5w060Y4dOzRr1iw999xzp6ubAffEE0/otttuU4sWLYLdFaDaIBgBAACYGHwNAABgIhgBAACYCEYAAAAmghEAAICJYAQAAGAiGAEAAJgIRgAAACaCEQAAgOn/A38ji4jC6N0fAAAAAElFTkSuQmCC\n"},"metadata":{}}]},{"cell_type":"code","source":["\n","'''\n","0.6974170721181139\n","0.7210084602980533\n","\n","0.69742140125998\n","0.72107615101251\n","'''"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"w3rebm7fKGKp","executionInfo":{"status":"ok","timestamp":1690623683740,"user_tz":-540,"elapsed":6,"user":{"displayName":"심민기","userId":"11907351072291229928"}},"outputId":"968ba25b-e77b-4115-d340-ac139f69a863"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\n0.6974170721181139\\n0.7210084602980533\\n\\n0.69742140125998\\n0.72107615101251\\n'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":25}]},{"cell_type":"markdown","source":["## feature 마력 배기량 무게 속가 모델"],"metadata":{"id":"09iEKI3fLk1I"}},{"cell_type":"code","source":["df_5 = df.drop(['origin','mpg','name','cylinders'], axis=1 ) # null 데이터를 지우고 싶으면 axis = 0 컬럼 자체를 지우고 싶으면 axis = 1\n","\n","df_5\n","\n","\n","X_train, X_test, y_train, y_test = train_test_split(df_5, df_1, test_size = 0.3,  random_state = 7) # 70: 30\n","\n","train_set = []\n","test_set = []\n","\n","for n in range(1,1000):\n","\n","  lasso = Lasso(alpha=0.001*n).fit(X_train, y_train) # alpha=1 규제 기본값\n","\n","  train_set.append(lasso.score(X_train, y_train))\n","  test_set.append(lasso.score(X_test, y_test))\n","\n","\n","\n","\n","print(max(train_set))\n","print(max(test_set))\n","\n","plt.figure(dpi = 100)\n","\n","plt.plot(range(1,1000)  , train_set, label='train 정확도')\n","\n","plt.plot(range(1,1000)  , test_set, label='테스트 정확도')\n","\n","plt.xlabel('alpha 값 (1000배)')\n","plt.ylabel('정확도')\n","plt.legend()\n","plt.show()\n","\n","0.8067813852460776\n","0.8105878897600636"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":502},"id":"_uR3NlxcKtHr","executionInfo":{"status":"ok","timestamp":1690623689181,"user_tz":-540,"elapsed":5446,"user":{"displayName":"심민기","userId":"11907351072291229928"}},"outputId":"4ba16607-1714-4a55-f2bd-65f96cb37380"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.8067814247755745\n","0.8105877592405457\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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W265BTDnZ/rhhx948cUXL3mtIiKAeXvsyCbYu9z8St0EnDWbjoe3ubRGq0HQejBExIO1ehYMF2cKRsKYMWPYvHmzIzR4enqyceNG/Pz8KC4upri4mKKiIoqLi895jry8PGJjY0lOTj7ve11//fVs3rwZPz+/Cvd3796dDz744Jyvf+211/j3v//t2Lbb7Rw/fpzU1FQCAgIctfxaTEwMmzdvrvCcpz/jr/Xs2RObzeaYtPLXrr76ap599tlz1ioicl62NNi3wgxC+76Bgizn/U07myGo1WBzUsV6/Aj9paRgJCxatIjs7OxyM1VXxeLFi0lLS+PIkSNERkae87i9e/eyfPly2rZte0Hvc++993Lvvfc6tr/44gtefPFFRyiqSO/evSkqKqpw3wMPPHDO1+3atYvMzEy8vLwuqFYRESclRZCyDvYsg70rIP1X6036NoDWl0ObK8w/gyPcUmZ9p2AkGIZxUaEoNzeXf/zjH9xzzz388Y9/ZOHChec93lJN98H379/Po48+yoIFC/jzn//MV199BZTvMdqwYQMLFy7k22+/JTAwELvdjq+vLw8++CABAQHl1khzRa0iUk+dTC7rFVoB+1dBce5ZOy3mfEJtrjC/mnXX7bEaQMHIlQwDisvf1nE5L/+LGoRXUlLC8ePHyc7OrvC21NmKi4u54447uPbaa5kxYwa33XYbkydPPu94neHDh5/z9tRNN93EP//5z9+scfPmzYwfP55Tp07xyy+/8K9//cux79cL4W7bto0ZM2awatUqR9D573//y+TJk3n99dcB+PDDD/n222+58sorNdZIRC6cvRgOrYPdX8HupXBij/P+gCZlQWiI2SvkH+qeOuWcFIxcqTgPnj73bSWX+fuRKk/eFR8fD4DVauX2228nLy+PH3744bxjhpKTk7n77ruJjo7m+eefB+CNN97gzjvvZPjw4cyaNYvmzZuXe92SJUto06ZNleo7LT8/n5kzZ/LJJ5/wySefYLfbufnmm3n77bd57rnniIqKKveaxo0bk5aWxpw5c+jevTuZmZn85z//YdiwYY5jbrnlFl555RWn11ksFkpKSvD01P8mInIeeSfN22O7vzJ7hs5+lN7qCdF9zSDU5gpz3NBF9NCL6+knvgCwZcuWCtsHDRpUYfurr77Kc889x9SpUxk/fryj3cPDg7feeov//ve/DBs2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PZt58+bRs2fPCq/z6tWr6dWrF1arlYiICAIDA9mxY4djf2lpKWvWrNHf91/p1asX27Ztc2rbs2cPbdq0ASr+O61rXXU2m43IyEhHKDqtS5cuZGZm6meHi1THdf2tc1yUi36uTS7Kp59+avTo0cPIzs42DMOcx6hLly6OOTWkciZOnGiMGjXKKC0tLbcvJyfHiImJcZozo02bNsa6descx0yaNMkxZ0ZpaakxceJE4957771k9ddWZz+uX1paasTHx5ebW2f+/PmO42fOnGlcffXVRmFhoWEY5tw6w4cPv/SF13DLli0zYmNjjbS0NMMwDGPHjh1G8+bNjZ07dxqGoWtdXUpKSozevXsbM2fOdPzM3bt3r9G+fXtjzZo1+tlRTX79uH51XNeNGzcarVq1csxjtGbNGiM6Oto4derURderYFQDvPTSS0anTp2Mzp07G1dccYWxf/9+d5dUq5w8edIAjPbt2xtxcXGOr/j4eOPo0aOGYRjGli1bjISEBKNr165G586djffff9/pHPn5+cYf/vAHo0OHDkaHDh2Mu+66q1omCqvrpk2bZkydOtWxfeDAAeOqq64yOnfubHTs2NGYMWOG0/GlpaXGP/7xD6NDhw5Gp06djBtvvNE4fvz4pS67Vpg7d67Rtm1bo3379kb37t2NL7/80mm/rnX1OH78uHH33XcbXbp0MeLj442EhARj4cKFjv362XHx2rZtaxw4cMCprTqu60cffWR06dLF6Nq1q9G3b19j06ZN1VKvxTAM4+L7nURERERqP40xEhERESmjYCQiIiJSRsFIREREpIyCkYiIiEgZBSMRERGRMgpGIiIiImUUjERERETKKBiJSL1ht9uJjIx0dxnV7v333+eRRx4BYOzYsfzvf/9zc0UitZeCkYhUm9TUVFq3bl3p4z/44APGjx9fbe//2Wef0aFDB6evBg0asHjxYgAMwyAvL69S59q3bx9Tpkxxavvyyy8JDg7m22+/LXd8WloaV199NXFxcXTp0oXZs2c77TcMg2nTphEbG0vnzp255ZZbsNlsTsf873//o0+fPsTHx9OnTx++++47x77PP/+cO++80+n4xo0bA1BcXExxcXG57x977DH27NlTqc8rIiYFIxGpNsXFxRQWFlb6+KKiIscv8epw/fXXs2vXLqev+Ph4PD09q3yuBx54gAceeMCxPWfO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\n"},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["0.8105878897600636"]},"metadata":{},"execution_count":26}]},{"cell_type":"markdown","source":["## feature 마력 배기량 무게 모델"],"metadata":{"id":"PdnYqFUvLeY9"}},{"cell_type":"code","source":["df_4_2 = df.drop(['acceleration','origin','mpg','name','cylinders'], axis=1 ) # null 데이터를 지우고 싶으면 axis = 0 컬럼 자체를 지우고 싶으면 axis = 1\n","\n","df_4_2\n","\n","X_train, X_test, y_train, y_test = train_test_split(df_4_2, df_1, test_size = 0.3,  random_state = 7) # 70: 30\n","\n","train_set = []\n","test_set = []\n","\n","for n in range(1,1000):\n","\n","  lasso = Lasso(alpha=0.001*n).fit(X_train, y_train) # alpha=1 규제 기본값\n","\n","  train_set.append(lasso.score(X_train, y_train))\n","  test_set.append(lasso.score(X_test, y_test))\n","\n","\n","\n","\n","print(max(train_set))\n","print(max(test_set))\n","\n","plt.figure(dpi = 100)\n","\n","plt.plot(range(1,1000)  , train_set, label='train 정확도')\n","\n","plt.plot(range(1,1000)  , test_set, label='테스트 정확도')\n","\n","plt.xlabel('alpha 값 (1000배)')\n","plt.ylabel('정확도')\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":484},"id":"tvaIy7hTKxSD","executionInfo":{"status":"ok","timestamp":1690623695462,"user_tz":-540,"elapsed":6285,"user":{"displayName":"심민기","userId":"11907351072291229928"}},"outputId":"bc20d587-dc38-4c8b-f4fe-aff75574d4fa"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.8067813852460776\n","0.8105878897600636\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## feature 배기량 무게 모델"],"metadata":{"id":"VZEmCr0iNOJd"}},{"cell_type":"code","source":["df_3_2 = df.drop(['displacement','acceleration','origin','mpg','name','cylinders'], axis=1 ) # null 데이터를 지우고 싶으면 axis = 0 컬럼 자체를 지우고 싶으면 axis = 1\n","\n","df_3_2\n","\n","X_train, X_test, y_train, y_test = train_test_split(df_3_2, df_1, test_size = 0.3,  random_state = 7) # 70: 30\n","\n","train_set = []\n","test_set = []\n","\n","for n in range(1,1000):\n","\n","  lasso = Lasso(alpha=0.001*n).fit(X_train, y_train) # alpha=1 규제 기본값\n","\n","  train_set.append(lasso.score(X_train, y_train))\n","  test_set.append(lasso.score(X_test, y_test))\n","\n","\n","\n","\n","print(max(train_set))\n","print(max(test_set))\n","\n","plt.figure(dpi = 100)\n","\n","plt.plot(range(1,1000)  , train_set, label='train 정확도')\n","\n","plt.plot(range(1,1000)  , test_set, label='테스트 정확도')\n","\n","plt.xlabel('alpha 값 (1000배)')\n","plt.ylabel('정확도')\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":484},"id":"MUKMb8YcLoQ0","executionInfo":{"status":"ok","timestamp":1690623700859,"user_tz":-540,"elapsed":5408,"user":{"displayName":"심민기","userId":"11907351072291229928"}},"outputId":"06ea6a68-eceb-4649-c920-f7dbea09c858"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.8066827093266103\n","0.8113079877273995\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## featuer 무게 마력 모델 (당선)"],"metadata":{"id":"D8PRYgNSOeUP"}},{"cell_type":"code","source":["df_3_3 = df.drop(['horsepower','acceleration','origin','mpg','name','cylinders'], axis=1 ) # null 데이터를 지우고 싶으면 axis = 0 컬럼 자체를 지우고 싶으면 axis = 1\n","\n","df_3_3\n","\n","X_train, X_test, y_train, y_test = train_test_split(df_3_3, df_1, test_size = 0.3,  random_state = 7) # 70: 30\n","\n","train_set = []\n","test_set = []\n","\n","for n in range(1,1000):\n","\n","  lasso = Lasso(alpha=0.001*n).fit(X_train, y_train) # alpha=1 규제 기본값\n","\n","  train_set.append(lasso.score(X_train, y_train))\n","  test_set.append(lasso.score(X_test, y_test))\n","\n","\n","\n","\n","print(max(train_set))\n","print(max(test_set))\n","\n","plt.figure(dpi = 100)\n","\n","plt.plot(range(1,1000)  , train_set, label='train 정확도')\n","\n","plt.plot(range(1,1000)  , test_set, label='테스트 정확도')\n","\n","plt.xlabel('alpha 값 (1000배)')\n","plt.ylabel('정확도')\n","plt.legend()\n","plt.show()"],"metadata":{"id":"hixTk7v6OAhs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"lFu5z5PePN0_"},"execution_count":null,"outputs":[]}]}